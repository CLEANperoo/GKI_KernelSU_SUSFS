name: NetHunter Kernel Builder (Garnet)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison build-essential curl flex git kmod libssl-dev libncurses5-dev libelf-dev ccache dwarves

    - name: Clone AOSP Clang
      run: |
        git clone --depth=1 https://github.com/ClangBuiltLinux/linux-toybox clang
        export PATH=$PWD/clang/bin:$PATH

    - name: Setup Environment Variables
      run: |
        echo "Setting up build environment"
        export ARCH=arm64
        export SUBARCH=arm64
        export CLANG_PATH=$PWD/clang
        export PATH=$CLANG_PATH/bin:$PATH
        export KBUILD_COMPILER_STRING=$($CLANG_PATH/bin/clang --version | head -n 1)
        echo "Compiler: $KBUILD_COMPILER_STRING"

    - name: Kernel Defconfig
      run: |
        make O=out ARCH=arm64 SUBARCH=arm64 garnet_defconfig

    - name: Compile Kernel
      run: |
        make -j$(nproc) O=out ARCH=arm64 SUBARCH=arm64 \
          CC=clang CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_COMPAT=arm-linux-gnueabi- \
          CLANG_TRIPLE=aarch64-linux-gnu-

    - name: Check zImage or Image.gz-dtb
      run: |
        if [ ! -f out/arch/arm64/boot/Image.gz-dtb ]; then
          echo "Kernel Image not found!"
          exit 1
        fi

    - name: Clone AnyKernel3 (NetHunter)
      run: |
        git clone --depth=1 https://github.com/offensive-security/nethunter-kernel-builder anykernel

    - name: Copy Kernel to AnyKernel3
      run: |
        cp out/arch/arm64/boot/Image.gz-dtb anykernel/
        cd anykernel
        zip -r9 ../nethunter_kernel_garnet.zip *

- name: Upload Kernel Zip
  uses: actions/upload-artifact@v4
  with:
    name: NetHunter-Kernel-Garnet
    path: nethunter_kernel_garnet.zip
